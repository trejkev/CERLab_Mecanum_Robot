<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="cerlab_mecanum">

    <!-- Bring robot parts to the model -->
    <xacro:include filename="$(find cerlab_mecanum)/urdf/robot_parts/mecanum_wheel.xacro"/>
    <xacro:include filename="$(find cerlab_mecanum)/urdf/robot_parts/base_link.xacro"    />
    <xacro:include filename="$(find cerlab_mecanum)/urdf/robot_parts/sensor.xacro"       />
    
    <!-- Robot geometry parameters -->
    <xacro:property name="PI" value="3.1415926535897931" />

    <!-- Robot body ( base link ) parameters -->
    <xacro:property name="base_link_length" value="0.461"/>
    <xacro:property name="base_link_width"  value="0.580"/>
    <xacro:property name="base_link_height" value="0.152"/>

    <!-- Wheel parameters -->
    <xacro:property name="wheel_radius" value="${0.203/2}"/>
    <xacro:property name="wheel_width"  value="0.078"     />


    <xacro:include filename="$(find cerlab_mecanum)/urdf/robot.gazebo"/>
    

    <link name="base_footprint"></link>


    <!-- Adding the main body -->

    <xacro:base_link parent="base_footprint">
        <origin xyz="0 0 ${wheel_radius + base_link_height/2}" rpy="0 0 0" />
    </xacro:base_link>

    <xacro:base_plate_link parent="base_footprint" length="${base_link_length}" width="${base_link_width - 0.032}" height="0.001">
        <origin xyz="0 0.023 ${wheel_radius + 0.02}" rpy="0 0 0" />
    </xacro:base_plate_link>


    <!-- Adding mecanum wheels -->

    <xacro:omni_wheel prefix="xpyp" parent="base_link" reflect="false">
        <origin xyz="${base_link_length/2 + wheel_width/2 + 0.01} ${base_link_width/2-0.065} ${-base_link_height/2 + 0.02}" rpy="0 0 ${PI/2}"/>
    </xacro:omni_wheel>

    <xacro:omni_wheel prefix="xnyp" parent="base_link" reflect="true">
        <origin xyz="${-base_link_length/2 - wheel_width/2 - 0.01} ${base_link_width/2-0.065} ${-base_link_height/2 + 0.02}" rpy="0 0 ${PI/2}"/>
    </xacro:omni_wheel>

    <xacro:omni_wheel prefix="xpyn" parent="base_link" reflect="true">
        <origin xyz="${base_link_length/2 + wheel_width/2 + 0.01} ${-base_link_width/2+0.095} ${-base_link_height/2 + 0.02}" rpy="0 0 ${PI/2}"/>
    </xacro:omni_wheel>

    <xacro:omni_wheel prefix="xnyn" parent="base_link" reflect="false">
        <origin xyz="${-base_link_length/2 - wheel_width/2 - 0.01} ${-base_link_width/2+0.095} ${-base_link_height/2 + 0.02}" rpy="0 0 ${PI/2}"/>
    </xacro:omni_wheel>


    <!-- Adding LiDAR sensors -->

    <xacro:lidar prefix="front" parent="base_link">
        <origin xyz="0 ${base_link_width/2-0.046} ${base_link_height/2+0.05}" rpy="0 0 0"/>
    </xacro:lidar>

    <xacro:lidar prefix="back" parent="base_link">
        <origin xyz="0 ${-base_link_width/2+0.1} ${base_link_height/2+0.05}" rpy="0 0 0"/>
    </xacro:lidar>

    <!-- Adding the movement control -->
    <gazebo>
        <plugin name="movement_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>20.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo>

    <!-- <gazebo>
        <plugin name="gazebo_ros_mecanum_diff_drive" filename="libgazebo_ros_mecanum_drive.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <LeftRear>xnyn_wheel_joint</LeftRear>
            <LeftFront>xnyp_wheel_joint</LeftFront>
            <RightFront>xpyp_wheel_joint</RightFront>
            <RightRear>xpyn_wheel_joint</RightRear>
            <odometryRate>20</odometryRate>      
            <publishWheelTF>true</publishWheelTF>
            <publishWheelJointState>true</publishWheelJointState>
            <WheelTorque>1</WheelTorque>
            <WheelSeparationW>0.5</WheelSeparationW>
            <WheelSeparationL>0.6</WheelSeparationL>
            <wheelAccel>5</wheelAccel>
            <wheelDiameter>${wheel_radius*2}</wheelDiameter>
            <publishOdom>false</publishOdom>
            <isRollerModel>true</isRollerModel>
        </plugin>
    </gazebo> -->

</robot>